functions to implement : 

- more powerfull strtok()

- checkout rust string library and implement 
  some of it's features

- strchr variant to get all occurences of a character 

- strchr variant to change all occurences of a character 

- some file read wrapper 

- the format part of the string function to turn stuff into string :D 

- a heapsort function bc I think heaps are cool as fuck 

- maybe a pigeonhole sort or smtg


list of string.h functions to redefine : 

stpcpy -> wth
sptncpy -> wth

strcat -> done 
strchr -> done 
strcmp -> done 

strcoll -> has to support wchar or smtg I'll checkout the documentation
strcoll_l -> // 

strcpy -> kinda covered in dup ngl

strcspn -> done  
strdup -> done 

strerror -> no?
strerror_l -> 
strerror_r -> 

strfry -> done 
strlen -> done 

strncat -> kinda irrelevant ?
strncmp -> somewhat irrelelevant ?

strncpy -> idk
strndup-> idk
strnlen -> irrelevant 

strpbrk -> done 
strrchr -> done 

strsignal -> 

strspn -> done ; not tested 

strstr-> done ; not tested 

strtok / strsep -> merged into a big cut function 
strtok_r ->

strxfrm -> locale stuff is weird to me 
strxfrm_l -> 




I'm not gonna mess w the memset, memcopy,... family of 
functions. 


some stdio.h functions to redefine : 

sprintf 
snprintf 

build.sh : 
not done 

docs : 
not done 

portability : 
not tested I'll make a  test battery and run it on 
Arch, Debian, Void and Gentoo 
I don't care about windows / macOS compatibility

debug: 
more debug needed ngl

support wide char : 
idk maybe in a release or smtg ? 
 

making repo cleaner : 

gpl message everywhere once I'm done ; k&r style declarations maybe ? 
docs 
fancier makefile and source structures 
